#!/bin/bash
####################################################################################################
#
# THIS SCRIPT IS NOT AN OFFICIAL PRODUCT OF JAMF SOFTWARE
# AS SUCH IT IS PROVIDED WITHOUT WARRANTY OR SUPPORT
#
# BY USING THIS SCRIPT, YOU AGREE THAT JAMF SOFTWARE
# IS UNDER NO OBLIGATION TO SUPPORT, DEBUG, OR OTHERWISE
# MAINTAIN THIS SCRIPT
#
####################################################################################################
#
# ABOUT THIS PROGRAM
# This script will attempt to find an existing my.cnf file on macOS and move it to
# /etc/my.cnf. If a config does not exist, one will be made at /etc/my.cnf
#
####################################################################################################
file1="/usr/local/mysql/my.cnf"
file2="/usr/local/mysql/etc/my.cnf"
file3="/etc/my.cnf"
file4="~/.my.cnf"
file5="/etc/mysql/my.cnf"

read -p "Is Tomcat stopped? [y / n]: " tomcat
if [[ $tomcat != 'y' || 'Y' ]]; then
  echo "Stopping Tomcat!"
  /bin/launchctl unload /Library/LaunchDaemons/com.jamfsoftware.tomcat.plist
else
  echo "Moving onto main process."
fi
echo ""
if [[ -f $file1 ]]; then
  mv -f $file1 $file3
  echo "Moving previous config from $file1 to $file3"
elif [[ -f $file2 ]]; then
  mv -f $file2 $file3
  echo "Moving previous config from $file2 to $file3"
elif [[ -f $file3 ]]; then
  echo "There is a an already existing $file3"
  exit 0
elif [[ -f $file4 ]]; then
  mv $file4 $file3
  echo "Moving previous config from $file4 to $file3"
elif [[ -f $file5 ]]; then
  mv -f $file5 $file3
  echo "Moving previous config from $file5 to $file3"
else
echo "No previous config found, building my.cnf from based off default settings."
echo ""
/bin/cat > $file3 <<EOF
# For advice on how to change settings please see
# http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html
# *** DO NOT EDIT THIS FILE. It's a template which will be copied to the
# *** default location during install, and will be replaced if you
# *** upgrade to a newer version of MySQL.
[mysqld]

# Remove leading # and set to the amount of RAM for the most important data
# cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.
# innodb_buffer_pool_size = 128M
innodb_file_per_table = 1
table_definition_cache = 400
table_open_cache = 400

pid-file=/usr/local/mysql/data/mysqld.local.pid

# Default settings are below. These may need to be changed depending on environment.
max_allowed_packet=64M # Updated by JSS Database Utility
max_connections=151 # Updated by JSS Database Utility
expire_logs_days=0 # Updated by JSS Database Utility
max_binlog_size=16M # Updated by JSS Database Utility

# Remove leading # to turn on a very important data integrity option: logging
# changes to the binary log between backups.
# log_bin
# These are commonly set, remove the # and set as required.
# basedir = .....
# datadir = .....
# port = .....
# server_id = .....
# socket = .....
# Remove leading # to set options mainly useful for reporting servers.
# The server defaults are faster for transactions and fast SELECTs.
# Adjust sizes as needed, experiment to find the optimal values.
# join_buffer_size = 128M
# sort_buffer_size = 2M
# read_rnd_buffer_size = 2M
sql_mode=NO_ENGINE_SUBSTITUTION
secure-file-priv = ""
EOF
fi

sed -i.bak '/mysqld/a\
innodb_file_per_table=OFF\
table_definition_cache=400\
table_open_cache = 400\
' /etc/my.cnf

read -p "Do you want to restart MySQL to have changes take affect? [y / n]: " sql
if [[ $sql != 'y' ]]; then
  echo "Please manually restart MySQL."
  echo ""
else
  /bin/launchctl unload /Library/LaunchDaemons/com.oracle.oss.mysql.mysqld.plist
  sleep 10
  /bin/launchctl load /Library/LaunchDaemons/com.oracle.oss.mysql.mysqld.plist
fi

echo "Success! Please manually start Tomcat when ready!"
